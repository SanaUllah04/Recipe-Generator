"use client"
import Link from 'next/link'
import { useState } from 'react'

const Navbar = () => {
  const [openNavbar, setOpenNavbar] = useState(false)
  const toggleNavbar = () => {
    setOpenNavbar(openNavbar => !openNavbar)
  }
  return (
    <header className="absolute top-0 inset-x-0 z-50 h-24 flex items-center">
      <div className="mx-auto lg:max-w-7xl w-full px-5 sm:px-10 md:px-12 lg:px-5 h-full items-center">
        <nav className="flex justify-between items-center h-full">
          <div className="flex min-w-max items-center">
            <Link href="/" className="flex items-center gap-x-4 text-2xl font-semibold text-gray-700 dark:text-gray-300">
              <div className="flex items-center -space-x-3 font-semibold">
                <span className="h-6 aspect-square bg-emerald-600 dark:bg-emerald-400 rounded-full flex" />
                <span className="h-6 aspect-square bg-gray-600 dark:bg-white rounded-full flex" />
              </div>
              Recipe JINI
            </Link>
          </div>
          <div className={`
              flex flex-col space-y-10 inset-0 fixed top-0  h-[100dvh] bg-white dark:bg-gray-950 lg:!bg-transparent py-20 px-5 sm:px-10 md:px-14
              transition-all ease-linear duration-300 lg:flex-row lg:flex-1 lg:py-0 lg:px-0 lg:space-y-0 lg:gap-x-10 lg:relative lg:top-0 lg:h-full lg:items-center lg:justify-between lg:w-max
              ${openNavbar ? "visible opacity-100 translate-y-0" : "-translate-y-9 opacity-0 invisible lg:translate-y-0 lg:visible lg:opacity-100"}
            `}>
            <ul className="flex flex-col gap-y-5 text-gray-700 dark:text-gray-300 lg:items-center lg:flex-row lg:gap-x-5 lg:h-full lg:justify-center lg:flex-1">
              <li>
                <Link href="..#" className="transition ease-linear hover:text-gray-900 dark:hover:text-white">
                  Home
                </Link>
              </li>
              
              <li>
                <Link href="/products" className="transition ease-linear hover:text-gray-900 dark:hover:text-white">
                  Products
                </Link>
              </li>
              <li>
                <Link href="/services" className="transition ease-linear hover:text-gray-900 dark:hover:text-white text-emerald-600">
                  Services
                </Link>
              </li>
              <li>
                <Link href="/company" className="transition ease-linear hover:text-gray-900 dark:hover:text-white">
                  Company
                </Link>
              </li>
            </ul>

              <div className="w-full flex sm:w-max lg:min-w-max lg:items-center">
              <Link href="https://sanaullah04.github.io/SanaUllahTheLearner.github.io/#" className="flex justify-center gap-x-3 items-center text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white
                      border-b bg-gray-700 dark:border-blue-300 hover:border-b-gray-900 dark:hover:border-b-white bg-transparent">
                About Creator
                <span>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" className="w-5 h-5">
                    <path fillRule="evenodd" d="M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z" clipRule="evenodd" />
                  </svg>
                </span>
              </Link>
            </div>
            
          </div>
          <div className="flex items-center justify-end relative z-60 lg:hidden">
            <button onClick={toggleNavbar} className="p-3 rounded-full bg-emerald-600 dark:bg-emerald-500 outline-none w-12 aspect-square flex flex-col relative justify-center items-center">
              <span className="sr-only">toggle navbar</span>
              <span className={`w-6 h-0.5 rounded-full bg-gray-300 transition-transform duration-300 ease-linear ${openNavbar ? "translate-y-1.5 rotate-[40deg]" : ""}`} />
              <span className={`w-6 origin-center  mt-1 h-0.5 rounded-full bg-gray-300 transition-all duration-300 ease-linear ${openNavbar ? "scale-x-0 opacity-0" : ""}`} />
              <span className={`w-6 mt-1 h-0.5 rounded-full bg-gray-300 transition-all duration-300 ease-linear ${openNavbar ? "-translate-y-1.5 -rotate-[40deg]" : ""}`} />
            </button>
          </div>
        </nav>
      </div>
    </header>
  )
}

const ServicesPage = () => {
  const services = [
    {
      icon: "ü§ñ",
      title: "AI Recipe Generation",
      description: "Get personalized recipes generated by AI based on your preferences, dietary restrictions, and available ingredients.",
      features: ["Custom ingredient substitutions", "Dietary preference matching", "Portion size adjustments", "Cooking skill level adaptation"],
      price: "Starting at $9.99/month"
    },
    {
      icon: "üì±",
      title: "Recipe Customization API",
      description: "Integrate our powerful recipe customization engine into your own applications with our developer-friendly API.",
      features: ["RESTful API endpoints", "Real-time recipe modifications", "Nutrition data integration", "Multi-language support"],
      price: "From $0.05 per API call"
    },
    {
      icon: "üë®‚Äçüç≥",
      title: "Personal Chef Consultation",
      description: "One-on-one virtual sessions with professional chefs to refine your recipes and improve your cooking techniques.",
      features: ["Video consultation sessions", "Personalized recipe recommendations", "Cooking technique guidance", "Meal planning assistance"],
      price: "$49.99 per session"
    },
    {
      icon: "üè¢",
      title: "Enterprise Recipe Solutions",
      description: "Custom recipe management solutions for restaurants, food brands, and culinary businesses.",
      features: ["White-label recipe platform", "Bulk recipe processing", "Brand customization", "Advanced analytics"],
      price: "Custom pricing"
    },
    {
      icon: "üìä",
      title: "Nutrition Analysis Service",
      description: "Comprehensive nutritional analysis for all your recipes with detailed macro and micronutrient breakdowns.",
      features: ["Detailed nutrition facts", "Allergen identification", "Calorie tracking", "Health score ratings"],
      price: "$4.99/month per user"
    },
    {
      icon: "üõí",
      title: "Smart Grocery Integration",
      description: "Automatically generate shopping lists and integrate with major grocery delivery services.",
      features: ["Automated shopping lists", "Price comparison", "Delivery service integration", "Inventory tracking"],
      price: "Free with premium plans"
    }
  ]

  const testimonials = [
    {
      name: "Sarah Johnson",
      role: "Food Blogger",
      image: "üë©‚Äçü¶∞",
      quote: "Recipe Jini's AI service helped me create over 200 unique recipes for my blog. The customization options are incredible!",
      rating: 5
    },
    {
      name: "Marcus Chen",
      role: "Restaurant Owner",
      image: "üë®‚Äçüç≥",
      quote: "The enterprise solution streamlined our menu development process. We can now test and modify recipes 10x faster.",
      rating: 5
    },
    {
      name: "Emily Rodriguez",
      role: "Nutritionist",
      image: "üë©‚Äç‚öïÔ∏è",
      quote: "The nutrition analysis service is incredibly accurate. It's become an essential tool for my practice.",
      rating: 5
    }
  ]

  const plans = [
    {
      name: "Starter",
      price: "$9.99",
      period: "/month",
      description: "Perfect for home cooks who want to explore new recipes",
      features: [
        "50 AI-generated recipes/month",
        "Basic customization options",
        "Nutrition analysis",
        "Mobile app access",
        "Email support"
      ],
      popular: false
    },
    {
      name: "Professional",
      price: "$24.99",
      period: "/month",
      description: "Ideal for food enthusiasts and content creators",
      features: [
        "Unlimited AI-generated recipes",
        "Advanced customization",
        "API access (1000 calls/month)",
        "Priority support",
        "Recipe export options",
        "Grocery integration"
      ],
      popular: true
    },
    {
      name: "Enterprise",
      price: "Custom",
      period: "pricing",
      description: "For businesses and organizations",
      features: [
        "White-label solution",
        "Unlimited API calls",
        "Custom integrations",
        "Dedicated account manager",
        "Advanced analytics",
        "24/7 support"
      ],
      popular: false
    }
  ]

  return (
    <>
      <Navbar />
      <div className="bg-gray-100 dark:bg-gray-900 min-h-screen">
        {/* Hero Section */}
        <section className="pt-32 pb-20 relative overflow-hidden">
          <div className="absolute top-0 left-0 -translate-x-[54%] -translate-y-[70%] w-2/5 rounded-full aspect-square bg-emerald-600/70 backdrop-filter blur-3xl opacity-50" />
          <div className="absolute bottom-0 right-0 translate-x-[54%] translate-y-[70%] w-2/5 rounded-full aspect-square bg-emerald-600/70 backdrop-filter blur-3xl opacity-50" />
          
          <div className="mx-auto lg:max-w-7xl w-full px-5 sm:px-10 md:px-12 lg:px-5">
            <div className="text-center max-w-4xl mx-auto">
              <span className="border border-gray-500 px-3 py-0.5 rounded-full bg-gray-50 dark:bg-gray-950 bg-opacity-50 text-gray-700 dark:text-gray-300 mb-6 inline-block">
                Our Services
              </span>
              <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 dark:text-white mb-6">
                Comprehensive Recipe Solutions for Everyone
              </h1>
              <p className="text-lg text-gray-600 dark:text-gray-400 mb-8">
                From AI-powered recipe generation to enterprise integrations, we provide cutting-edge culinary technology services tailored to your needs.
              </p>
            </div>
          </div>
        </section>

        {/* Services Grid */}
        <section className="py-20">
          <div className="mx-auto lg:max-w-7xl w-full px-5 sm:px-10 md:px-12 lg:px-5">
            <div className="text-center mb-16">
              <h2 className="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
                Our Service Offerings
              </h2>
              <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
                Choose from our comprehensive suite of recipe and culinary technology services
              </p>
            </div>

            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {services.map((service, index) => (
                <div key={index} className="bg-white dark:bg-gray-950 rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-200 dark:border-gray-800 hover:border-emerald-300 dark:hover:border-emerald-600 group">
                  <div className="text-4xl mb-4">{service.icon}</div>
                  <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-3">
                    {service.title}
                  </h3>
                  <p className="text-gray-600 dark:text-gray-400 mb-6">
                    {service.description}
                  </p>
                  
                  <div className="space-y-2 mb-6">
                    {service.features.map((feature, featureIndex) => (
                      <div key={featureIndex} className="flex items-center gap-3">
                        <div className="w-2 h-2 bg-emerald-600 rounded-full flex-shrink-0"></div>
                        <span className="text-sm text-gray-600 dark:text-gray-400">{feature}</span>
                      </div>
                    ))}
                  </div>

                  <div className="border-t border-gray-200 dark:border-gray-800 pt-6">
                    <div className="text-emerald-600 font-bold mb-4">{service.price}</div>
                    <button className="w-full bg-emerald-600 hover:bg-emerald-700 text-white font-semibold py-3 px-4 rounded-lg transition duration-300">
                      Learn More
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Pricing Plans */}
        <section className="py-20 bg-white dark:bg-gray-950">
          <div className="mx-auto lg:max-w-7xl w-full px-5 sm:px-10 md:px-12 lg:px-5">
            <div className="text-center mb-16">
              <h2 className="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
                Choose Your Plan
              </h2>
              <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
                Flexible pricing options to suit individuals, professionals, and enterprises
              </p>
            </div>

            <div className="grid md:grid-cols-3 gap-8">
              {plans.map((plan, index) => (
                <div key={index} className={`relative bg-gray-50 dark:bg-gray-900 rounded-2xl p-8 border-2 transition-all duration-300 ${plan.popular ? 'border-emerald-500 shadow-lg scale-105' : 'border-gray-200 dark:border-gray-800 hover:border-emerald-300'}`}>
                  {plan.popular && (
                    <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                      <span className="bg-emerald-600 text-white px-4 py-1 rounded-full text-sm font-semibold">
                        Most Popular
                      </span>
                    </div>
                  )}
                  
                  <div className="text-center mb-8">
                    <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
                      {plan.name}
                    </h3>
                    <div className="mb-2">
                      <span className="text-4xl font-bold text-emerald-600">{plan.price}</span>
                      <span className="text-gray-600 dark:text-gray-400">{plan.period}</span>
                    </div>
                    <p className="text-gray-600 dark:text-gray-400">
                      {plan.description}
                    </p>
                  </div>

                  <div className="space-y-4 mb-8">
                    {plan.features.map((feature, featureIndex) => (
                      <div key={featureIndex} className="flex items-center gap-3">
                        <svg className="w-5 h-5 text-emerald-600 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7" />
                        </svg>
                        <span className="text-gray-700 dark:text-gray-300">{feature}</span>
                      </div>
                    ))}
                  </div>

                  <button className={`w-full py-3 px-4 rounded-lg font-semibold transition duration-300 ${plan.popular ? 'bg-emerald-600 hover:bg-emerald-700 text-white' : 'border-2 border-emerald-600 text-emerald-600 hover:bg-emerald-600 hover:text-white'}`}>
                    {plan.price === "Custom" ? "Contact Sales" : "Get Started"}
                  </button>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Testimonials */}
        <section className="py-20">
          <div className="mx-auto lg:max-w-7xl w-full px-5 sm:px-10 md:px-12 lg:px-5">
            <div className="text-center mb-16">
              <h2 className="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
                What Our Clients Say
              </h2>
              <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
                Trusted by thousands of chefs, food creators, and businesses worldwide
              </p>
            </div>

            <div className="grid md:grid-cols-3 gap-8">
              {testimonials.map((testimonial, index) => (
                <div key={index} className="bg-white dark:bg-gray-950 rounded-2xl p-8 shadow-lg border border-gray-200 dark:border-gray-800">
                  <div className="flex items-center gap-1 mb-4">
                    {[...Array(testimonial.rating)].map((_, i) => (
                      <svg key={i} className="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                      </svg>
                    ))}
                  </div>
                  <p className="text-gray-700 dark:text-gray-300 mb-6 italic">
                    {testimonial.quote}
                  </p>
                  <div className="flex items-center gap-4">
                    <div className="text-3xl">{testimonial.image}</div>
                    <div>
                      <div className="font-semibold text-gray-900 dark:text-white">
                        {testimonial.name}
                      </div>
                      <div className="text-gray-600 dark:text-gray-400 text-sm">
                        {testimonial.role}
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-20 relative overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-r from-emerald-600 to-emerald-700"></div>
          <div className="relative mx-auto lg:max-w-7xl w-full px-5 sm:px-10 md:px-12 lg:px-5">
            <div className="text-center text-white">
              <h2 className="text-3xl md:text-4xl font-bold mb-6">
                Ready to Transform Your Culinary Experience?
              </h2>
              <p className="text-emerald-100 text-lg mb-8 max-w-2xl mx-auto">
                Join thousands of satisfied customers who trust Recipe Jini for their culinary needs
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Link href="/auth" className="inline-flex items-center justify-center gap-x-3 bg-white text-emerald-700 font-semibold px-8 py-4 rounded-full hover:bg-gray-100 transition duration-300">
                  Start Free Trial
                </Link>
                <Link href="/company" className="inline-flex items-center justify-center gap-x-3 border-2 border-white text-white font-semibold px-8 py-4 rounded-full hover:bg-white hover:text-emerald-700 transition duration-300">
                  Contact Sales
                </Link>
              </div>
            </div>
          </div>
        </section>
      </div>
    </>
  )
}

export default ServicesPage